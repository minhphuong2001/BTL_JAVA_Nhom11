/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package views;

/**
 *
 * @author Minh Phuong Do
 */


import controllers.FileController;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Objects;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.Customer;
import models.Order;
import models.OrderDetail;
import models.product;
import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;
import static views.ManagementCustomerView.model;
public class ManagementReceptView extends javax.swing.JPanel {
    public static DefaultTableModel model;
    public static DefaultTableModel modelCus;
    public static DefaultTableModel modelPro;
    SimpleDateFormat fm = new SimpleDateFormat("dd/MM/yyyy");
    
    public static List<Customer> customers= new ArrayList<>();
    public static List<product> products =new ArrayList<>();
    public static List<Order> orders =new ArrayList<>();
    public static List<OrderDetail> orderDetails=new ArrayList<>();
    static FileController fileController;
    private  float Tongtien=0;

    /**
     * Creates new form ManagementReceptView
     */
     
     
    public ManagementReceptView() {
        initComponents();
        CustomersDisplay();
        actionDisplay();
        Date date1=new Date();
        ipnDate.setDate(date1);
        orderDetails=fileController.readOrderDetailFromFile("orderDetail.txt");
        products =fileController.readProductFromFile("product.txt"); 
        autoIncreaseOrderID();
        ImageIcon addIcon=iconimage(24,24,"src/icons/plus icon.png");
        addBtn.setIcon(addIcon);
        ImageIcon detailIcon=iconimage(24,24,"src/icons/Ticket-add-icon.png");
        searchBtn.setIcon(detailIcon);
        ImageIcon updateIcon=iconimage(24,24,"src/icons/update.png");
        updateBtn.setIcon(updateIcon);
        ImageIcon deleteIcon=iconimage(24,24,"src/icons/bin.png");
        deleteBtn.setIcon(deleteIcon);
        ipnOrderID.setEnabled(false);
        updateBtn.setEnabled(false);
        deleteBtn.setEnabled(false);
        searchBtn.setEnabled(false);
        
    }
    public ImageIcon iconimage(int w, int h,String url){
            ImageIcon icon=new ImageIcon(url);
            Image img=icon.getImage();
            Image imgScale =img.getScaledInstance(w,h,img.SCALE_SMOOTH);
            ImageIcon Scale=new ImageIcon(imgScale);
            return Scale;
     } 
    public void autoIncreaseOrderID(){
        if(orders.size()==0){
            ipnOrderID.setText("1");
            
        }
        else{
        Integer id = orders.get(orders.size()-1).getOrderID() + 1;
        ipnOrderID.setText(id+"");
        }
        
    }
    public void setNullTextField(){
        Date date1=new Date();
        ipnDate.setDate(date1);
        ipnCusmonerID.setText("");
        ipnCusmonerID.setText("");
        ipnTotal.setText("0.0");
        autoIncreaseOrderID();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        ipnCusmonerID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        ipnTotal = new javax.swing.JTextField();
        addBtn = new javax.swing.JButton();
        searchBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        cbxstatus = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        ipnOrderID = new javax.swing.JFormattedTextField();
        ipnDate = new com.toedter.calendar.JDateChooser();
        jScrollPane3 = new javax.swing.JScrollPane();
        orderTbl = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        customerTbl = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        ipnSearch = new javax.swing.JTextField();

        setPreferredSize(new java.awt.Dimension(1200, 585));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jPanel1.setPreferredSize(new java.awt.Dimension(1200, 585));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setText("Quản lí hóa đơn");

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin hóa đơn"));
        jPanel5.setPreferredSize(new java.awt.Dimension(766, 400));

        ipnCusmonerID.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        ipnCusmonerID.setEnabled(false);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        jLabel3.setText("Mã hóa đơn");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        jLabel5.setText("Mã khách hàng");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        jLabel6.setText("Ngày tạo");

        jLabel18.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        jLabel18.setText("Tổng tiền");

        ipnTotal.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        ipnTotal.setEnabled(false);

        addBtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        addBtn.setText("Tạo");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        searchBtn.setBackground(new java.awt.Color(102, 255, 102));
        searchBtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        searchBtn.setText("Xem");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        updateBtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        updateBtn.setText("Sửa ");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        deleteBtn.setBackground(new java.awt.Color(251, 57, 57));
        deleteBtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        deleteBtn.setText("Hủy đơn");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        cbxstatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Đang chờ xử lý", "Đã thanh toán", " " }));
        cbxstatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxstatusActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        jLabel19.setText("Trạng thái đơn hàng");

        ipnOrderID.setEnabled(false);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                    .addComponent(jLabel18)
                    .addComponent(jLabel3)
                    .addComponent(addBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ipnTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ipnOrderID, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ipnCusmonerID, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(updateBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ipnDate, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cbxstatus, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ipnOrderID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(jLabel6))
                    .addComponent(ipnDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ipnCusmonerID, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(jLabel5)
                    .addComponent(cbxstatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(ipnTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(74, 74, 74)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(202, Short.MAX_VALUE))
        );

        orderTbl.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        orderTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã hóa đơn", "Mã khách hàng", "Ngày lập", "Thành tiền", "Trạng thái đơn"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        orderTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                orderTblMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(orderTbl);
        if (orderTbl.getColumnModel().getColumnCount() > 0) {
            orderTbl.getColumnModel().getColumn(4).setMinWidth(110);
        }

        customerTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã khách hàng", "Tên khách hàng", "Số điện thoại", "Điểm tích luỹ"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        customerTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                customerTblMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(customerTbl);

        jButton1.setText("Thêm");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Nhập số điện thoại ");

        ipnSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ipnSearchKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel2)
                        .addGap(49, 49, 49)
                        .addComponent(ipnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(363, 363, 363)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(ipnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 539, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(298, 298, 298)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(58, 58, 58))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 969, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 231, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
     
    private void customerTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customerTblMouseClicked
        // TODO add your handling code her
        int row=customerTbl.getSelectedRow();
        int id=(int)modelCus.getValueAt(row, 0);
        ipnCusmonerID.setText(id+"");
    }//GEN-LAST:event_customerTblMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        /*        // TODO add your handling code here:*/
        //them hoa don moi
        try {
            Integer id=Integer.parseInt(ipnOrderID.getText());
            Date date=ipnDate.getDate();
            SimpleDateFormat f = new SimpleDateFormat("dd/MM/yyyy");
            String strdate=f.format(date);
            String status=cbxstatus.getSelectedItem().toString();
            ipnTotal.setText("0.0");
            Integer cusID=Integer.parseInt(ipnCusmonerID.getText().trim());
            Order order=new Order(id, cusID,strdate,status);
            orders.add(order);
            fileController.updatelistOrderToFile("order.txt", orders);
            model.setRowCount(0);
            orders.forEach(item -> {
            model.addRow(new Object[]{
                item.getOrderID(), item.getCustomerID(),item.getDate(),item.getTotalMoneyDouble(),item.getStatus()
            });
             });
            JOptionPane.showMessageDialog(deleteBtn, "Thêm hóa đơn thành công");
            setNullTextField();
            
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(deleteBtn, "Hãy nhập đủ thông tin");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(deleteBtn, "Lỗi hệ thống");
        }
    }//GEN-LAST:event_addBtnActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        Date date=ipnDate.getDate();
        SimpleDateFormat fm= new SimpleDateFormat("dd/MM/yyyy");
        String strdate=fm.format(date);
        ManagementOrderDetail hd=new ManagementOrderDetail(ipnOrderID.getText(),ipnCusmonerID.getText(),strdate);
        hd.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_searchBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed

        Date date=ipnDate.getDate();
        SimpleDateFormat fm= new SimpleDateFormat("dd/MM/yyyy");
        String strdate=fm.format(date);
        ipnTotal.setText(Tongtien+"");
        Integer cusID=Integer.parseInt(ipnCusmonerID.getText().trim());
        int row=orderTbl.getSelectedRow();
        Integer orderID=(Integer)orderTbl.getValueAt(row, 0);
        String status=cbxstatus.getSelectedItem().toString();
        System.out.println(status);
        //update lai file
        Order order=new Order(orderID,cusID,strdate,status);
        orders.set(row,order);
        FileController.updatelistOrderToFile("order.txt", orders);

        //update table
        orderTbl.setValueAt(orderID,row, 0);
        orderTbl.setValueAt(cusID, row, 1);
        orderTbl.setValueAt(strdate,row,2);
        orderTbl.setValueAt(Tongtien,row,3);
        orderTbl.setValueAt(status,row,4);

        //dua cac o text ve null;
       
                
        setNullTextField();
        cbxstatus.setSelectedIndex(0);
       
    }//GEN-LAST:event_updateBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        int row=orderTbl.getSelectedRow();
        String status=(String)orderTbl.getValueAt(row, 4);
        Integer OrderID=(Integer)orderTbl.getValueAt(row, 0);
        if(status.equals(cbxstatus.getItemAt(0)))
        {
           int answer = JOptionPane.showConfirmDialog(null, "Bạn có chắc muốn hóa đơn này?", "Xác nhận", JOptionPane.YES_NO_OPTION, 0);
            if (answer == 0) 
            {
                for(int j=0;j<orderDetails.size();j++)
                {
                    if(orderDetails.get(j).getOrderID()==OrderID)
                    { 
                        for(int i=0; i<=products.size()-1;i++)
                            
                            if(products.get(i).getmaSP()==orderDetails.get(j).getProductID())
                            {
                                products.get(i).setSoLuong(products.get(i).getSoLuong()+orderDetails.get(j).getQuantity());
                            }
                        
                        orderDetails.remove(orderDetails.get(j));
              
                    }
                }
                fileController.updateListProductToFile("product.txt", products);
                fileController.updateListOrderDetail("orderDetail.txt",orderDetails);
                
                orders.get(row).setPoint(-orders.get(row).getTotalMoneyDouble());
                orders.remove(row);
                fileController.updatelistOrderToFile("order.txt",orders);
                model.setRowCount(0);
                orders.forEach(item -> {
                model.addRow(new Object[]{
                    item.getOrderID(), item.getCustomerID(),item.getDate(),item.getTotalMoneyDouble(),item.getStatus()
                 });
                 });
                JOptionPane.showMessageDialog(deleteBtn,"Đã xóa hóa đơn");
                setNullTextField();
            }
        }
        else
        {
            JOptionPane.showConfirmDialog(deleteBtn, "Đã thanh toán không thể xóa");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteBtnActionPerformed
     
    private void cbxstatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxstatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxstatusActionPerformed

    private void orderTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orderTblMouseClicked
        addBtn.setEnabled(false);
        updateBtn.setEnabled(true);
        deleteBtn.setEnabled(true);
        searchBtn.setEnabled(true);
        int row=orderTbl.getSelectedRow();
        int orderID=(int)model.getValueAt(row,0);
        int cusID=(int)model.getValueAt(row,1);
        Date date;
        try {
            int srow=orderTbl.getSelectedRow();
            date = new SimpleDateFormat("dd/MM/yyyy").parse((String) model.getValueAt(srow, 2));

            ipnDate.setDate(date);
        } catch (ParseException ex) {
            Logger.getLogger(ManagementReceptView.class.getName()).log(Level.SEVERE, null, ex);
        }
        float total=(float)model.getValueAt(row, 3);
        String status=(String)model.getValueAt(row,4);
        System.out.println(orderID);
        // đưa dữ liệu lên ô input
        ipnOrderID.setText(orderID+"");
        ipnCusmonerID.setText(cusID+"");

        ipnTotal.setText(total+"");
        if(status.equals(cbxstatus.getItemAt(0))){
            cbxstatus.setSelectedIndex(0);
        }
        else
        cbxstatus.setSelectedIndex(1);
    }//GEN-LAST:event_orderTblMouseClicked

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        deleteBtn.setEnabled(false);
        updateBtn.setEnabled(false);
        addBtn.setEnabled(true);
        setNullTextField();
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseClicked

    private void ipnSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ipnSearchKeyReleased
        String search = ipnSearch.getText().trim();

        TableRowSorter<DefaultTableModel> rowSorter = new TableRowSorter<DefaultTableModel>(model);

        customerTbl.setRowSorter(rowSorter);

        if(search.length() == 0){
            rowSorter.setRowFilter(null);
        } else {
            rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + search, 2));
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_ipnSearchKeyReleased

     private void actionDisplay(){
        searchBtn.setEnabled(true);
        model=(DefaultTableModel)orderTbl.getModel();
        orders=FileController.readOrderFromFile("order.txt");
        orders.forEach(item -> {
            model.addRow(new Object[]{
                item.getOrderID(), item.getCustomerID(),item.getDate(),item.getTotalMoneyDouble(),item.getStatus()
            });
        });
       
        
    }
    private void CustomersDisplay()
    {
        
        modelCus=(DefaultTableModel) customerTbl.getModel();
        customers=fileController.readCustomerFromFile("customer.txt");
       
            for(Customer a: customers ) {
            modelCus.addRow(new Object[]{
                a.getCustomerId(), a.getCustomerName(), a.getCustomerPhone(), a.getAccumulatePoints()
            });
            }
        
    }
    
   
     
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JComboBox<String> cbxstatus;
    private javax.swing.JTable customerTbl;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JTextField ipnCusmonerID;
    private com.toedter.calendar.JDateChooser ipnDate;
    private javax.swing.JFormattedTextField ipnOrderID;
    private javax.swing.JTextField ipnSearch;
    private javax.swing.JTextField ipnTotal;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable orderTbl;
    private javax.swing.JButton searchBtn;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}